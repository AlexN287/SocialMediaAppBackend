{"version":3,"sources":["logo.svg","Helper/AxiosHelper.js","Pages/SignIn.js","Pages/Dashboard.js","Pages/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","defaults","baseURL","headers","post","request","method","url","data","withCredentials","SignIn","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","React","createElement","className","onSubmit","async","e","preventDefault","status","console","log","type","name","placeholder","value","onChange","target","href","Dashboard","message","setMessage","onClick","response","statusText","SignUp","email","setEmail","formData","FormData","append","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2ea1663d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:8080';\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\nexport const request = (method, url, data) => {\r\n    return axios({\r\n        method: method,\r\n        url: url,\r\n        data: data,\r\n        withCredentials: true, // Enable sending credentials (cookies) with requests\r\n    });\r\n};","import React, { useState } from 'react';\r\nimport '../Styles/SignInStyles.css';\r\nimport { request } from '../Helper/AxiosHelper';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SignIn = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await request('POST', 'http://localhost:8080/login', {\r\n        username,\r\n        password,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log('Authentication successful');\r\n        navigate('/dashboard');\r\n      } else {\r\n        //setError('Invalid username or password');\r\n        console.log('Invalid username or password');\r\n      }\r\n    } catch {\r\n      //console.error('Error during authentication:', error);\r\n      //setError(error.response ? error.response.data : 'An error occurred during authentication');\r\n      console.log('Error during authentication:');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card\">\r\n            <form onSubmit={handleSubmit} className=\"box\">\r\n              <h1>Sign In</h1>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <input type=\"submit\" value=\"Sign In\" />\r\n              <p className=\"text-muted\">\r\n                Don't have an account? Please <a href=\"/signup\">Sign Up</a>\r\n              </p>\r\n              {error && <p className=\"error-message\">Invalid username or password</p>}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { request } from '../Helper/AxiosHelper';\r\n\r\nconst Dashboard = () => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleButtonClick = async () => {\r\n    try {\r\n      const response = await request('GET', '/register');\r\n\r\n      if (response.status === 200) {\r\n        const data = response.data;\r\n        setMessage(data.message);\r\n        console.log(data.message);\r\n      } else {\r\n        console.log('Error fetching data:', response.statusText);\r\n        setMessage('An error occurred while fetching data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during data fetch:', error);\r\n      setMessage('An error occurred while fetching data');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard Page</h1>\r\n      <button onClick={handleButtonClick}>Fetch Data</button>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import React, { useState } from 'react';\r\nimport '../Styles/SignInStyles.css';\r\nimport { request } from '../Helper/AxiosHelper';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nconst SignUp = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const navigate = useNavigate();\r\n    const [error, setError] = useState('');\r\n    // ...\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('username', username);\r\n        formData.append('password', password);\r\n        formData.append('email', email);\r\n  \r\n        const response = await axios.post('http://localhost:8080/signup', formData);\r\n  \r\n        if (response.status === 200) {\r\n          console.log('Registration successful');\r\n            navigate('/');\r\n        } else {\r\n          console.log('Error during registration:', response.statusText);\r\n          // Handle error state or display error message\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during registration:', error);\r\n        // Handle error state or display error message\r\n      }\r\n    };\r\n  \r\n    return (\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"card\">\r\n                <form onSubmit={handleSubmit} className=\"box\">\r\n                  <h1>Sign Up</h1>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                  />\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                  <input type=\"submit\" value=\"Sign Up\" />\r\n                  <p className=\"text-muted\">\r\n                    Already have an account? Please <a href=\"/\">Sign In</a>\r\n                  </p>\r\n                  {error && <p className=\"error-message\">{error}</p>}\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n  };\r\n  \r\n\r\nexport default SignUp;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SignIn from './Pages/SignIn';\nimport Dashboard from './Pages/Dashboard';\nimport SignUp from './Pages/SignUp';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Routes>\n        <Route path=\"/\" element={<SignIn />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n        <Route path=\"/signup\" element={<SignUp />} />\n      </Routes>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}